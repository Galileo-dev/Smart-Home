var app=function(){"use strict";function e(){}function t(e){return e()}function n(){return Object.create(null)}function o(e){e.forEach(t)}function s(e){return"function"==typeof e}function i(e,t){return e!=e?t==t:e!==t||e&&"object"==typeof e||"function"==typeof e}let a,r;function d(e,t){return a||(a=document.createElement("a")),a.href=t,e===a.href}function l(e,t){e.appendChild(t)}function c(e,t,n){e.insertBefore(t,n||null)}function h(e){e.parentNode.removeChild(e)}function u(e){return document.createElement(e)}function p(){return e=" ",document.createTextNode(e);var e}function m(e,t,n){null==n?e.removeAttribute(t):e.getAttribute(t)!==n&&e.setAttribute(t,n)}function f(e){r=e}const g=[],w=[],b=[],y=[],v=Promise.resolve();let $=!1;function x(e){b.push(e)}const k=new Set;let C=0;function T(){const e=r;do{for(;C<g.length;){const e=g[C];C++,f(e),I(e.$$)}for(f(null),g.length=0,C=0;w.length;)w.pop()();for(let e=0;e<b.length;e+=1){const t=b[e];k.has(t)||(k.add(t),t())}b.length=0}while(g.length);for(;y.length;)y.pop()();$=!1,k.clear(),f(e)}function I(e){if(null!==e.fragment){e.update(),o(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(x)}}const M=new Set;let L;function H(e,t){e&&e.i&&(M.delete(e),e.i(t))}function j(e,t,n,o){if(e&&e.o){if(M.has(e))return;M.add(e),L.c.push((()=>{M.delete(e),o&&(n&&e.d(1),o())})),e.o(t)}}function S(e){e&&e.c()}function E(e,n,i,a){const{fragment:r,on_mount:d,on_destroy:l,after_update:c}=e.$$;r&&r.m(n,i),a||x((()=>{const n=d.map(t).filter(s);l?l.push(...n):o(n),e.$$.on_mount=[]})),c.forEach(x)}function P(e,t){const n=e.$$;null!==n.fragment&&(o(n.on_destroy),n.fragment&&n.fragment.d(t),n.on_destroy=n.fragment=null,n.ctx=[])}function _(e,t){-1===e.$$.dirty[0]&&(g.push(e),$||($=!0,v.then(T)),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function A(t,s,i,a,d,l,c,u=[-1]){const p=r;f(t);const m=t.$$={fragment:null,ctx:null,props:l,update:e,not_equal:d,bound:n(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(s.context||(p?p.$$.context:[])),callbacks:n(),dirty:u,skip_bound:!1,root:s.target||p.$$.root};c&&c(m.root);let g=!1;if(m.ctx=i?i(t,s.props||{},((e,n,...o)=>{const s=o.length?o[0]:n;return m.ctx&&d(m.ctx[e],m.ctx[e]=s)&&(!m.skip_bound&&m.bound[e]&&m.bound[e](s),g&&_(t,e)),n})):[],m.update(),g=!0,o(m.before_update),m.fragment=!!a&&a(m.ctx),s.target){if(s.hydrate){const e=function(e){return Array.from(e.childNodes)}(s.target);m.fragment&&m.fragment.l(e),e.forEach(h)}else m.fragment&&m.fragment.c();s.intro&&H(t.$$.fragment),E(t,s.target,s.anchor,s.customElement),T()}f(p)}class q{$destroy(){P(this,1),this.$destroy=e}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}$set(e){var t;this.$$set&&(t=e,0!==Object.keys(t).length)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}function R(t){let n;return{c(){n=u("div"),m(n,"class","svelte-10d9uih")},m(e,t){c(e,n,t)},p:e,i:e,o:e,d(e){e&&h(n)}}}class F extends q{constructor(e){super(),A(this,e,null,R,i,{})}}function N(t){let n,o,s,i,a,r;return s=new F({}),{c(){n=u("h1"),n.textContent="404 NOT FOUND!",o=p(),S(s.$$.fragment),i=p(),a=u("p"),a.textContent="These are not the reports you are looking for"},m(e,t){c(e,n,t),c(e,o,t),E(s,e,t),c(e,i,t),c(e,a,t),r=!0},p:e,i(e){r||(H(s.$$.fragment,e),r=!0)},o(e){j(s.$$.fragment,e),r=!1},d(e){e&&h(n),e&&h(o),P(s,e),e&&h(i),e&&h(a)}}}class D extends q{constructor(e){super(),A(this,e,null,N,i,{})}}function J(t){let n,o,s,i,a,r,d,l,m,f,g,w,b,y,v;return{c(){n=u("h1"),n.textContent="Company and Embedded Website Design",o=p(),s=u("p"),s.innerHTML="The company website features a mobile-friendly design as does the embedded system frontend. this is done using the <code>@media</code> CSS style to sample the device screen size so as to use only certain CSS when device is small.",i=p(),a=u("h1"),a.textContent="Theme",r=p(),d=u("p"),d.innerHTML="I have coded the website in a way where all colors are defined in one place <code>App.css</code> this can be easily changed, this is done through CSS variables which allow you to define site global variable which can be used throughout the app. I could have added a button that changes the theme with a single click or follow the system theme but due to my strict deadline, I was not able to implement it.",l=p(),m=u("h1"),m.textContent="Accessability",f=p(),g=u("p"),g.textContent="theming is also important for color blind users who may struggle to see different themes so for accessibility purposes this will also be important.",w=p(),b=u("p"),b.textContent="Icons where used\nto further allow the app to be used by many different people\ne.g. people who do not speak English will still understand Icons which are use on the navbar for easy navigation.",y=p(),v=u("p"),v.textContent="This could also be expanded on by introducing many new themes for aesthetics."},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t),c(e,l,t),c(e,m,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,y,t),c(e,v,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d),e&&h(l),e&&h(m),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(y),e&&h(v)}}}class K extends q{constructor(e){super(),A(this,e,null,J,i,{})}}function O(t){let n,o,s,i,a,r,d,l,m,f,g,w,b,y,v;return{c(){n=u("p"),n.textContent="I have opted for a RaspberryPi as the embedded system due to its ability to run Linux and NodeJs allowing me to use an ExpressJS server.",o=p(),s=u("p"),s.textContent="Through this server, I set up a rest API using ExpressJs that can be accessed by the website as long as both are on the same network. this nature keeps the system from being accessed from outside the home which could allow an attack vector of sorts. while it would still be possible to port forward the website and the embedded system for security reasons I would not recommend it.",i=p(),a=u("p"),a.textContent="port forwarding and a simple login would solve and allow the device to be accessed from outside",r=p(),d=u("h1"),d.textContent="Database",l=p(),m=u("p"),m.textContent="while a database would be useful it adds unnecessary complexity so what better way to store state than to use the GPIO pins on the raspberry pi and check their state when needed.",f=p(),g=u("h2"),g.textContent="Keeping the backend and frontend in sync",w=p(),b=u("p"),b.textContent="From normal use of the app on multiple devices, there will be a point when the backend changes but the frontend doesnâ€™t this is an inherent disadvantage of rest APIs as they are stateless meaning the frontend does not know when the backend has updated. three ways to fix this would be.",y=p(),v=u("ol"),v.innerHTML="<li><h3>Use a websocket</h3> \n<p>this is a method of communication that is a continuous back and forth this would allow the backed to communicate any changes to gpio pin from other people ie someone used the app to turn off the light but this would not solve the problem of the light being turned off by other means. also, web sockets are more complicated and provide their own challenges</p></li> \n<li><h3>Use a Response to any changes from the app</h3> \n<p>every time a request is made to change the state we respond with the new state of the device. while we could just assume the new state this would not be true and may cause confusion if something is to happen or a bug is to occur.</p></li>"},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t),c(e,l,t),c(e,m,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,y,t),c(e,v,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d),e&&h(l),e&&h(m),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(y),e&&h(v)}}}class U extends q{constructor(e){super(),A(this,e,null,O,i,{})}}function W(t){let n,o,s,i,a,r,d,l,m,f,g,w,b,y,v,$,x,k,C,T,I;return{c(){n=u("h1"),n.textContent="Requirements for the product:",o=p(),s=u("h2"),s.textContent="Frontend Website:",i=p(),a=u("h3"),a.textContent="Needs",r=p(),d=u("ul"),d.innerHTML="<li>Needs to be able to communicate with the embedded system</li> \n<li>Retrieve data on page load from embedded system</li> \n<li>Send commands to the embedded system such as (turn off light or turn on light)</li> \n<li>Update UI when new data is received</li>",l=p(),m=u("h3"),m.textContent="Wants",f=p(),g=u("ul"),g.innerHTML="<li>Keep the system away from the cloud to reduce costs and also dependence on outside services.</li>",w=p(),b=u("h2"),b.textContent="Backend embedded system :",y=p(),v=u("h3"),v.textContent="Needs",$=p(),x=u("ul"),x.innerHTML="<li>Needs to be able to communicate with the website</li> \n<li>Send data to the frontend</li> \n<li>Carry out commands given such as (turn off light or turn on light)</li> \n<li>Respond to the frontend with new data when changed</li>",k=p(),C=u("h3"),C.textContent="Wants",T=p(),I=u("ul"),I.innerHTML="<li>record data such as power consumption or time light is on</li> \n<li>Using a database to record data that is shown to the frontend could reduce data response times as checking every gpio pin may be slow in big home wide automation</li>"},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t),c(e,l,t),c(e,m,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,y,t),c(e,v,t),c(e,$,t),c(e,x,t),c(e,k,t),c(e,C,t),c(e,T,t),c(e,I,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d),e&&h(l),e&&h(m),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(y),e&&h(v),e&&h($),e&&h(x),e&&h(k),e&&h(C),e&&h(T),e&&h(I)}}}class B extends q{constructor(e){super(),A(this,e,null,W,i,{})}}function z(t){let n,o,s,i,a,r,d,l,m,f;return s=new F({}),a=new B({}),d=new K({}),m=new U({}),{c(){n=u("h1"),n.textContent="Design",o=p(),S(s.$$.fragment),i=p(),S(a.$$.fragment),r=p(),S(d.$$.fragment),l=p(),S(m.$$.fragment)},m(e,t){c(e,n,t),c(e,o,t),E(s,e,t),c(e,i,t),E(a,e,t),c(e,r,t),E(d,e,t),c(e,l,t),E(m,e,t),f=!0},p:e,i(e){f||(H(s.$$.fragment,e),H(a.$$.fragment,e),H(d.$$.fragment,e),H(m.$$.fragment,e),f=!0)},o(e){j(s.$$.fragment,e),j(a.$$.fragment,e),j(d.$$.fragment,e),j(m.$$.fragment,e),f=!1},d(e){e&&h(n),e&&h(o),P(s,e),e&&h(i),P(a,e),e&&h(r),P(d,e),e&&h(l),P(m,e)}}}class G extends q{constructor(e){super(),A(this,e,null,z,i,{})}}function Q(t){let n,o,s,i,a,r,d,l,m,f,g,w,b,y,v,$,x;return{c(){n=u("h1"),n.textContent="Improvements",o=p(),s=u("h2"),s.textContent="Embedded System / Product (Including frontend)",i=p(),a=u("ul"),a.innerHTML="<li>In future iterations of this app, moving to firebase for more secure worldwide access to the embedded system and accompanied website would help.</li> \n<li>Adding a power consumption meter to show the user how much energy they are using and provide a summary every month.</li> \n<li>Add a way to add devices without needing to edit the config.</li> \n<li>Add a way for the frontend to automatically find the backend in case a certain port is already taken</li>",r=p(),d=u("p"),d.textContent="This system can be widely expanded on to provide much more than a light control system. e.g heating, door open/close. the infrastructure and code are all there.",l=p(),m=u("ul"),m.innerHTML="<li>turning the website into a mobile app or progressive web app to help mobile.</li>",f=p(),g=u("h2"),g.textContent="Company Website",w=p(),b=u("ul"),b.innerHTML="<li><p>The product page could be expanded on to add a cart and checkout system. the infrastructure for this would be provided by Shopify which is being used on many websites. this would streamline the buying process.</p></li> \n<li><p>the website could use some images of the product. i.e renders, drawings.</p></li> \n<li><p>firebase could be used to create a comments section for the product to allow people who have bought the product to give feedback.</p></li>",y=p(),v=u("h1"),v.textContent="How well my project met the brief",$=p(),x=u("ul"),x.innerHTML="<li>I have a data capture form which is then is sent to firebase.</li> \n<li>My form uses validation</li> \n<li>I have used a variety of data capture.</li> \n<li>My Raspberry Pi has a frontend website to control the lights and dim them</li> \n<li>My website has more than 4 pages</li> \n<li>I am sending data from my raspberry pi to my firebase. ie uptime</li> \n<li>I am displaying information from my raspberry pi to my frontend, ie are lights on or off</li> \n<li>My frontend website and raspberry pi are linked</li> \n<li>My design is clean, crisp, and consistent</li> \n<li>My Company Website address the main issues addressed by my product</li> \n<li>My information is easy to read</li> \n<li>I have used a number of different tags in my HTML</li>"},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t),c(e,l,t),c(e,m,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,y,t),c(e,v,t),c(e,$,t),c(e,x,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d),e&&h(l),e&&h(m),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(y),e&&h(v),e&&h($),e&&h(x)}}}class V extends q{constructor(e){super(),A(this,e,null,Q,i,{})}}function X(t){let n,o,s,i,a,r;return s=new F({}),a=new V({}),{c(){n=u("h1"),n.textContent="Evaluation",o=p(),S(s.$$.fragment),i=p(),S(a.$$.fragment)},m(e,t){c(e,n,t),c(e,o,t),E(s,e,t),c(e,i,t),E(a,e,t),r=!0},p:e,i(e){r||(H(s.$$.fragment,e),H(a.$$.fragment,e),r=!0)},o(e){j(s.$$.fragment,e),j(a.$$.fragment,e),r=!1},d(e){e&&h(n),e&&h(o),P(s,e),e&&h(i),P(a,e)}}}class Y extends q{constructor(e){super(),A(this,e,null,X,i,{})}}function Z(t){let n,o,s,i,a,r,d,l,m,f,g,w,b,y,v,$,x,k,C,T,I,M,L,H,j,S,E,P,_;return{c(){n=u("h1"),n.textContent="Implementation of Company Website",o=p(),s=u("p"),s.textContent="The first stage I took was brainstorming how I wanted the website to look.",i=p(),a=u("ul"),a.innerHTML="<li>design must be consistent with the products frontend</li> \n<li>must be usable on many devices e.g desktop and mobile phone</li> \n<li>must look pleasing but not overwhelming</li> \n<li>must feature a contact form using firebase</li> \n<li>must use ES6 syntax</li>",r=p(),d=u("h1"),d.textContent="Implementation",l=p(),m=u("h2"),m.textContent="Firebase Contact form",f=p(),g=u("p"),g.innerHTML="<strong>This is required by the brief as a data capture form</strong>",w=p(),b=u("p"),b.textContent="I used Firebase to store contact form information\nthis information is stored in a firestore it is structured as such name, email, message, time. the document is stored in a collection on the database with random ids generated when added",y=p(),v=u("h2"),v.textContent="FAQ (Frequently Asked Questions)",$=p(),x=u("p"),x.textContent="Answer any concerns or questions potential or existing customers may have with the product.",k=p(),C=u("h2"),C.textContent="Product Page",T=p(),I=u("p"),I.textContent="This page lists all features and the operation of the product. it can be expanded in the future to be used as a purchase system that will allow customers to buy products without needing to use the contact form",M=p(),L=u("h2"),L.textContent="Home Page",H=p(),j=u("p"),j.textContent="This is the first webpage you see and informs the customer of what gateway is and how it operates.",S=p(),E=u("h1"),E.textContent="Issues",P=p(),_=u("p"),_.innerHTML="while using SvelteKit was nice in certain Situations it became a pain. for example, using firebase for the contact form had problems as SvelteKit is server-side rendered which means the server serving the website before distributing it. to do this it uses a nodejs environment with no windows because of this, firebase doesnâ€™t know what to do so it errors. some ways of fixing this is to not allow firebase to be imported when a window doesnâ€™t exist. after research and trial error and testing, I found that the Firestore <strong>must be only be initialized after the component has been displayed or mounted</strong> for this svelte provides an <code>onMount</code> function."},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t),c(e,l,t),c(e,m,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,y,t),c(e,v,t),c(e,$,t),c(e,x,t),c(e,k,t),c(e,C,t),c(e,T,t),c(e,I,t),c(e,M,t),c(e,L,t),c(e,H,t),c(e,j,t),c(e,S,t),c(e,E,t),c(e,P,t),c(e,_,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d),e&&h(l),e&&h(m),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(y),e&&h(v),e&&h($),e&&h(x),e&&h(k),e&&h(C),e&&h(T),e&&h(I),e&&h(M),e&&h(L),e&&h(H),e&&h(j),e&&h(S),e&&h(E),e&&h(P),e&&h(_)}}}class ee extends q{constructor(e){super(),A(this,e,null,Z,i,{})}}function te(t){let n,o,s,i,a,r,d,l,m,f,g,w,b,y,v,$,x,k,C,T,I,M,L,H,j,S,E,P,_;return{c(){n=u("h1"),n.textContent="Backend",o=p(),s=u("p"),s.textContent="I have opted for a raspberry pi as the embedded system due to its ability to run Linux and hence NodeJs allowing me to setup an expressJS server.",i=p(),a=u("p"),a.textContent="Through this server I setup a rest API using ExpressJs that can be accessed by the website as long as both are on the same network. this nature keeps the system from being accessed from outside the home which could allow an attack vector of sorts. while it would still be possible to port forward the website and the embedded system for security reasons I would not recommend.",r=p(),d=u("h1"),d.textContent="Database",l=p(),m=u("p"),m.textContent="while a database would be useful it adds unnecessary complexity so what better way to store state then to use the GPIO pins on the raspberry pi and check their state when needed.",f=p(),g=u("h2"),g.textContent="Why not to use database",w=p(),b=u("ul"),b.innerHTML="<li>It may become desynchronized with the actual activated pins causing confusion</li> \n<li>Needs extra resources</li> \n<li>Would need to be constantly updated along side every pin activation and deactivation</li> \n<li>If firebase was used the system would not operate without an internet connection which is one of the main selling points for my device</li>",y=p(),v=u("h2"),v.textContent="Keeping the backend and frontend in sync",$=p(),x=u("p"),x.textContent="From normal use of the app on multiple device there will be a point when the backend changes but the frontend doesnâ€™t this is an inherit disadvantage of rest apis as they are stateless meaning the frontend does not know when the backend has updated. three ways to fix this would be.",k=p(),C=u("ol"),C.innerHTML="<li><h3>Use a websocket</h3> \n<p>this is a method of communication which is continuous back and forth this would allow the backed to communicate any changes to gpio pin from other people ie someone used the app to turn off the light but this would not solve the problem of the light being turned off by other means. also web-sockets are more complicated and provide their own challenges</p></li> \n<li><h3>Use an Interval</h3> \n<p>every minute or so the frontend will request updated data from the backend. this allows for two things the backend to check the status of all gpio pins ie light turned off through external methods e.g light switch and for the backend to synchronize the frontend</p></li> \n<li><h3>Use a Response to any changes from the app</h3> \n<p>every time a request is made to change state we respond with the new state of the device. while we could just assume the new state this would not be true and may cause confusion if something is to happen or bug is to occur.</p></li>",T=p(),I=u("h2"),I.textContent="How a light is toggled (in steps):",M=p(),L=u("p"),L.innerHTML="the project is structured in a way that devices can be added in <code>constants.js</code> to easily add more lights",H=p(),j=u("ol"),j.innerHTML="<li>get device pins defined in <code>constants.js</code></li> \n<li>get current state of those pins</li> \n<li>invert that state e.g. <code>&quot;on&quot;</code> becomes <code>&quot;off&quot;</code></li> \n<li>set the pins to that new state</li> \n<li>get the state of pins</li> \n<li>respond to request with new pin state to update frontend</li>",S=p(),E=u("h2"),E.textContent="Video",P=p(),_=u("p"),_.textContent="This video will show a demonstration of both systems\nThe red and green LEDs are temporary and can be swapped out for the big and more powerful one."},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t),c(e,l,t),c(e,m,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,y,t),c(e,v,t),c(e,$,t),c(e,x,t),c(e,k,t),c(e,C,t),c(e,T,t),c(e,I,t),c(e,M,t),c(e,L,t),c(e,H,t),c(e,j,t),c(e,S,t),c(e,E,t),c(e,P,t),c(e,_,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d),e&&h(l),e&&h(m),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(y),e&&h(v),e&&h($),e&&h(x),e&&h(k),e&&h(C),e&&h(T),e&&h(I),e&&h(M),e&&h(L),e&&h(H),e&&h(j),e&&h(S),e&&h(E),e&&h(P),e&&h(_)}}}class ne extends q{constructor(e){super(),A(this,e,null,te,i,{})}}function oe(t){let n,o,s,i,a,r,d,l,m,f,g,w,b,y,v,$,x,k,C,T,I,M,L,H,j,S,E,P,_,A,q,R,F,N,D,J,K,O,U;return{c(){n=u("h1"),n.textContent="Timeline",o=p(),s=u("p"),s.textContent="I started in january",i=p(),a=u("h2"),a.textContent="(10/Jan/2022)",r=p(),d=u("p"),d.textContent="this week I have done research on the different embedded systems I could use for the system. I have also decided I want to use a frontend so then user can interact. I have not yet decided a purpose for the system Im thing something along the lines of door open close system or lights",l=p(),m=u("h2"),m.textContent="(17/Jan/2022)",f=p(),g=u("p"),g.textContent="I have decided I will make my project a light system which allows a user to operate their home lights from a phone or desktop by means of a interactive website hence meeting the advanced requirement of the brief",w=p(),b=u("h2"),b.textContent="(24/Jan/2022)",y=p(),v=u("p"),v.textContent="I have started programming a raspberry pi. It will allow me to use nodejs which I am familiar. Iâ€™m using ssh to connect to through putty and running a VScode instance on the pi to allow for a remote IDE",$=p(),x=u("h2"),x.textContent="(31/Jan/2022)",k=p(),C=u("p"),C.textContent="I have decided to use SvelteKit for both the company website and the embedded system as I am familiar with it and it would used in real world application unlike vanilla js and html with no framework which would become unnecessarily complicated as the project grows.",T=p(),I=u("h2"),I.textContent="(18/Feb/2022)",M=p(),L=u("p"),L.textContent="Navbar is finished. and basic functionality between frontend and backend is now working",H=p(),j=u("h2"),j.textContent="(19/Feb/2022)",S=p(),E=u("p"),E.textContent="GPIO library now works and I can read and set the state of pins",P=p(),_=u("h2"),_.textContent="(28/Feb/2022)",A=p(),q=u("p"),q.textContent="Basic Functionality of the light is now working will be adding dimming the coming days",R=p(),F=u("h2"),F.textContent="(7/Mar/2022)",N=p(),D=u("p"),D.textContent="the light now fully functional and i will begin on the company website",J=p(),K=u("h2"),K.textContent="(19/Mar/2022)",O=p(),U=u("p"),U.textContent="company website finished"},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t),c(e,l,t),c(e,m,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,y,t),c(e,v,t),c(e,$,t),c(e,x,t),c(e,k,t),c(e,C,t),c(e,T,t),c(e,I,t),c(e,M,t),c(e,L,t),c(e,H,t),c(e,j,t),c(e,S,t),c(e,E,t),c(e,P,t),c(e,_,t),c(e,A,t),c(e,q,t),c(e,R,t),c(e,F,t),c(e,N,t),c(e,D,t),c(e,J,t),c(e,K,t),c(e,O,t),c(e,U,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d),e&&h(l),e&&h(m),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(y),e&&h(v),e&&h($),e&&h(x),e&&h(k),e&&h(C),e&&h(T),e&&h(I),e&&h(M),e&&h(L),e&&h(H),e&&h(j),e&&h(S),e&&h(E),e&&h(P),e&&h(_),e&&h(A),e&&h(q),e&&h(R),e&&h(F),e&&h(N),e&&h(D),e&&h(J),e&&h(K),e&&h(O),e&&h(U)}}}class se extends q{constructor(e){super(),A(this,e,null,oe,i,{})}}function ie(t){let n,o,s,i,a,r,l,f,g,w,b,y,v,$,x,k,C,T,I,M,L,_,A,q;return s=new F({}),a=new ee({}),l=new ne({}),A=new se({}),{c(){n=u("h1"),n.textContent="Implementation and Testing",o=p(),S(s.$$.fragment),i=p(),S(a.$$.fragment),r=p(),S(l.$$.fragment),f=p(),g=u("video"),g.innerHTML='<source src="video/demonstration_video.mp4" type="video/mp4"/>',w=p(),b=u("img"),v=p(),$=u("img"),k=p(),C=u("img"),I=p(),M=u("img"),_=p(),S(A.$$.fragment),m(g,"width","500"),g.controls=!0,d(b.src,y="Images/system.drawio-2.png")||m(b,"src","Images/system.drawio-2.png"),d($.src,x="Images/Untitled Diagram.drawio-2.png")||m($,"src","Images/Untitled Diagram.drawio-2.png"),d(C.src,T="Images/Untitled Diagram.drawio.png")||m(C,"src","Images/Untitled Diagram.drawio.png"),d(M.src,L="Images/wireframe.png")||m(M,"src","Images/wireframe.png")},m(e,t){c(e,n,t),c(e,o,t),E(s,e,t),c(e,i,t),E(a,e,t),c(e,r,t),E(l,e,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,v,t),c(e,$,t),c(e,k,t),c(e,C,t),c(e,I,t),c(e,M,t),c(e,_,t),E(A,e,t),q=!0},p:e,i(e){q||(H(s.$$.fragment,e),H(a.$$.fragment,e),H(l.$$.fragment,e),H(A.$$.fragment,e),q=!0)},o(e){j(s.$$.fragment,e),j(a.$$.fragment,e),j(l.$$.fragment,e),j(A.$$.fragment,e),q=!1},d(e){e&&h(n),e&&h(o),P(s,e),e&&h(i),P(a,e),e&&h(r),P(l,e),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(v),e&&h($),e&&h(k),e&&h(C),e&&h(I),e&&h(M),e&&h(_),P(A,e)}}}class ae extends q{constructor(e){super(),A(this,e,null,ie,i,{})}}function re(t){let n,o,s,i,a,r,d,l,m,f,g,w,b,y,v,$,x,k,C,T,I,M,L,H,j,S,E,P,_,A,q,R,F,N,D,J,K,O,U,W,B,z,G,Q,V,X,Y;return{c(){n=u("h1"),n.textContent="Contents of project",o=p(),s=u("ul"),s.innerHTML="<li>Company website source <code>artefact/CompanyWebsite/</code> - interface for company website</li> \n<li>Embedded Frontend website <code>artefact/EmbeddedSystem/frontend</code> - interface for the embedded system. connects to Embedded Backend</li> \n<li>Embedded Backend <code>artefact/EmbeddedSystem/backend/</code> - runs on the raspberry pi and is accessed by the Embedded Frontend website</li> \n<li>Report website <code>report/source/</code> - The report. written in markdown. <code>.md</code></li>",i=p(),a=u("h1"),a.textContent="How to run",r=p(),d=u("h2"),d.textContent="Requirements",l=p(),m=u("p"),m.textContent="NodeJs",f=p(),g=u("h2"),g.textContent="To run",w=p(),b=u("ol"),b.innerHTML="<li>locate your console and point to the root of the project containing the <code>src</code> folder and <code>package.json</code> e.g. <code>artefact/CompanyWebsite</code></li> \n<li>first run <code>npm install</code> to install all required dependencies.</li> \n<li>next start the webserver with <code>npm run dev</code></li> \n<li>your console should tell you what URL the website is on e.g. <code>localhost:3000</code> open this in the browser</li>",y=p(),v=u("p"),v.innerHTML='if you have any issues please check out this <a href="https://svelte.dev/blog/svelte-for-new-developers" rel="nofollow">guide</a>',$=p(),x=u("h1"),x.textContent="File Structure",k=p(),C=u("h1"),C.innerHTML="Please be aware that all code written by me is located in the <code>/src</code> folders for each website needed to work with SvelteKit and svelte",T=p(),I=u("p"),I.innerHTML="<code>.svelte</code> files are the code. like HTML files but written in special syntax not much different from standard HTML and javascript",M=p(),L=u("p"),L.innerHTML="<code>on:click</code> adds an event listener and\nthe <code>on:click={}</code> is the function that it runs when clicked. an <code>on:click</code> with no <code>={}</code> is used to forward the <code>on:click</code> event to where the component is being used.",H=p(),j=u("p"),j.innerHTML="Any files or folders outside of the <code>/src</code> folder are generated by SvelteKit or are Config file used to assemble the website to its final form. this lets the website be reactive and server-side rendered. but I can assure you that everything you see and interact with is contained within the <code>/src</code> folder",S=p(),E=u("p"),E.innerHTML="Inside the <code>src</code> folder there are two other folders <code>routes</code> and <code>lib</code>.",P=p(),_=u("p"),_.innerHTML="<code>routes</code> contains all the url routes so <code>localhost:3000/contact</code> will show the <code>routes/contact.svelte</code>",A=p(),q=u("p"),q.innerHTML="A special route is the <code>__layout.svelte</code> this component is rendered on every route. it is used for parts of the website which are always seen, such as the navbar or notification panel.",R=p(),F=u("p"),F.innerHTML="The <code>lib</code> folder is where components are stored such as buttons and different elements for the webpage.",N=p(),D=u("h1"),D.textContent="Code structure",J=p(),K=u("p"),K.innerHTML="Each <code>.svelte</code> file is comprised of three sections.",O=p(),U=u("ol"),U.innerHTML="<li><p>script section denoted by <code>&lt;script&gt;</code> and this ends with <code>&lt;/script&gt;</code> like a normal HTML file. any functions defined in here can be used within the HTML using <code>{()=&gt;function()}</code>. anything in the HTML with <code>{}</code> brackets is referencing javascript.SvelteKit uses ES6 by default so the import statements are valid unlike the <code>require()</code> used in the Embedded system.</p></li> \n<li><p>the actual HTML uses standard HTML tags such <code>&lt;div&gt;</code>, <code>&lt;input/&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code> , etc</p></li> \n<li><p>style section denoted by <code>&lt;style&gt;</code> and this ends with <code>&lt;/style&gt;</code> comprise of all the CSS styles for the current <strong>component only</strong>. using the <code>.container</code> in multiple sections does not affect each other as they get scrambled by svelte on-site compilation.</p></li>",W=p(),B=u("p"),B.innerHTML="There is a global App.css file that contains the colors used throughout the app and is distributed using a <code>var(--color-type)</code> where type could be primary, secondary, etc.",z=p(),G=u("p"),G.innerHTML="To better modularize certain parts of the app such as buttons and dividers which are used throughout the app, I put them in their own components. These are located in the <code>lib</code> folder. These are called components and can be imported with the es6 import function <code>import PrimaryBTN from &#39;$lib/components/button.svelte&#39;;</code> and then used like an HTML tag which is self-closing <code>&lt;PrimaryBTN/&gt;</code>. This also makes apps less complex than their vanilla js and HTML counterpart while being fast and easily readable and SEO friendly.\n<code>$lib</code> is a builtin variable to the <code>src/lib</code> folder.",Q=p(),V=u("h2"),V.textContent="for further API references please take a look at the official SvelteKit documentation",X=p(),Y=u("p"),Y.innerHTML='<a href="https://kit.svelte.dev/docs/introduction" rel="nofollow">https://kit.svelte.dev/docs/introduction</a>'},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t),c(e,l,t),c(e,m,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,y,t),c(e,v,t),c(e,$,t),c(e,x,t),c(e,k,t),c(e,C,t),c(e,T,t),c(e,I,t),c(e,M,t),c(e,L,t),c(e,H,t),c(e,j,t),c(e,S,t),c(e,E,t),c(e,P,t),c(e,_,t),c(e,A,t),c(e,q,t),c(e,R,t),c(e,F,t),c(e,N,t),c(e,D,t),c(e,J,t),c(e,K,t),c(e,O,t),c(e,U,t),c(e,W,t),c(e,B,t),c(e,z,t),c(e,G,t),c(e,Q,t),c(e,V,t),c(e,X,t),c(e,Y,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d),e&&h(l),e&&h(m),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(y),e&&h(v),e&&h($),e&&h(x),e&&h(k),e&&h(C),e&&h(T),e&&h(I),e&&h(M),e&&h(L),e&&h(H),e&&h(j),e&&h(S),e&&h(E),e&&h(P),e&&h(_),e&&h(A),e&&h(q),e&&h(R),e&&h(F),e&&h(N),e&&h(D),e&&h(J),e&&h(K),e&&h(O),e&&h(U),e&&h(W),e&&h(B),e&&h(z),e&&h(G),e&&h(Q),e&&h(V),e&&h(X),e&&h(Y)}}}class de extends q{constructor(e){super(),A(this,e,null,re,i,{})}}function le(t){let n,o,s,i,a,r;return s=new F({}),a=new de({}),{c(){n=u("h1"),n.textContent="Introduction",o=p(),S(s.$$.fragment),i=p(),S(a.$$.fragment)},m(e,t){c(e,n,t),c(e,o,t),E(s,e,t),c(e,i,t),E(a,e,t),r=!0},p:e,i(e){r||(H(s.$$.fragment,e),H(a.$$.fragment,e),r=!0)},o(e){j(s.$$.fragment,e),j(a.$$.fragment,e),r=!1},d(e){e&&h(n),e&&h(o),P(s,e),e&&h(i),P(a,e)}}}class ce extends q{constructor(e){super(),A(this,e,null,le,i,{})}}function he(t){let n,o,s,i,a;return{c(){n=u("h2"),n.textContent="GDPR",o=p(),s=u("p"),s.textContent="To comply with the GDPR policy, none of my websites or backend retain any personal information of myself or others.",i=p(),a=u("p"),a.textContent="Also, I retain no personal information in an insecure manner all email addresses and names are sent directly to a secure encrypted Firestore."},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a)}}}class ue extends q{constructor(e){super(),A(this,e,null,he,i,{})}}function pe(t){let n,o,s,i,a,r,d,l,m,f,g,w,b,y,v,$,x;return{c(){n=u("h1"),n.textContent="Brain Storming",o=p(),s=u("p"),s.textContent="I have chosen SvelteKit for the frontend of this project for both the product and company website along with ExpressJs for the backend of the embedded system, which will be a raspberry pi",i=p(),a=u("p"),a.textContent="I was going to pick ReactJs but decided against it for a few reasons.",r=p(),d=u("p"),d.innerHTML="SvelteKit offers better performance, and it features <strong>(SSR) server-side rendering</strong> this works by initially compiling the webpage on the server, which is then served to the user as a static site without reactivity that would slow down the initial load. The <strong>DOM (Document Object Model)</strong> is then loaded in, and the app is now client-side rendered.\nSvelteKit is derived from another framework called svelte which does not feature SSR and is designed for single paged apps",l=p(),m=u("p"),m.innerHTML="The main feature of SvelteKit is a DOM-like reactivity but the enhancement of server-side rendered app with <strong>SEO (Search engine optimization)</strong>. This is ideal for a production environment as search engine optimization determines whether Google and other search engines will list your website as the first result to users. This is crucial as the user would give up trying to find your sight.",f=p(),g=u("p"),g.innerHTML="<strong>I Choose</strong> a light control system that allows for multiple lights that can all be connected to a single RaspberryPi. it works by using a MOSFET to toggle a low-power light, this can be swapped with a solenoid to allow for proper house lights. The RaspberryPi will host both a frontend and backend. The backend will control the Lights at the request of the frontend through an ExpressJs server which allows for easy adaptability for different apps, e.g. phone, tablet, desktop, or even some IoT device. Any device that can make requests on your network will be able to communicate with the backend server. I added a dimming feature as the pi is capable of PWM(Pulse Width Modulation). An application where this is important is a wake-up light and mood-setting.",w=p(),b=u("p"),b.innerHTML='Because my system will be able to control all lights in a house it can be used to turn on the bedroom light at a specific time to help people wake up easier. a <a href="http://mb.cision.com/Public/MigratedWpy/81617/9077638/80ece083943f51dd.pdf" rel="nofollow">study</a> showed when waking up to light rather than an alarm <strong>87% of participants found they were waking up feeling more refreshed, alert, and ready for the day</strong>.',y=p(),v=u("p"),v.innerHTML="I was going to pick a <strong>door open close system</strong> which would use some aluminum foil on both the doorframe and the door to form a basic switch circuit. the RaspberryPi could then detect a break in the circuit when the door is open. the data would then be forwarded to a frontend website but I rejected this idea as it would be useless. after some research, I found that doors need to be open to vent a house and stop mold from developing on walls so it would be kind of useless and the user would have no interaction. also the foil would keep bending after a while making the prototype too fragile to use.",$=p(),x=u("p"),x.innerHTML="Another Idea was a <strong>fall detection device</strong>. it would use accelerometers to detect high accelerations close to <strong>9.8m/s^2</strong> but this had issues of not being able to incorporate a useful frontend and I didnâ€™t want the RaspberryPi to break in testing so I choose not to pursue it. if a fall is detected and no large movements were detected within a certain time frame it would notify selected contacts."},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t),c(e,l,t),c(e,m,t),c(e,f,t),c(e,g,t),c(e,w,t),c(e,b,t),c(e,y,t),c(e,v,t),c(e,$,t),c(e,x,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d),e&&h(l),e&&h(m),e&&h(f),e&&h(g),e&&h(w),e&&h(b),e&&h(y),e&&h(v),e&&h($),e&&h(x)}}}class me extends q{constructor(e){super(),A(this,e,null,pe,i,{})}}function fe(t){let n,o,s;return{c(){n=u("h1"),n.textContent="Existing Systems",o=p(),s=u("ul"),s.innerHTML='<li><p><a href="https://store.google.com/ie/category/connected_home" rel="nofollow">Nest</a> - used to control heating system</p></li> \n<li><p><a href="https://www.ecobee.com/en-us/" rel="nofollow">EcoBee</a> - used to control heating system</p></li> \n<li><p><a href="https://www.philips-hue.com/en-gb/products/smart-ceiling-lights" rel="nofollow">Philips Hue</a> - similar to my system but very expensive. requires special lights and a gateway but also provides a color setting.</p></li> \n<li><p><a href="https://www.ikea.com/ie/en/cat/smart-lighting-36812/" rel="nofollow">Ikea Lights</a> - cheaper then philips hue but is intended for a single light not an entire house</p></li>'},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s)}}}class ge extends q{constructor(e){super(),A(this,e,null,fe,i,{})}}function we(t){let n,o,s,i,a,r,d,l,m,f;return s=new F({}),a=new ue({}),d=new me({}),m=new ge({}),{c(){n=u("h1"),n.textContent="Investigation and Planning",o=p(),S(s.$$.fragment),i=p(),S(a.$$.fragment),r=p(),S(d.$$.fragment),l=p(),S(m.$$.fragment)},m(e,t){c(e,n,t),c(e,o,t),E(s,e,t),c(e,i,t),E(a,e,t),c(e,r,t),E(d,e,t),c(e,l,t),E(m,e,t),f=!0},p:e,i(e){f||(H(s.$$.fragment,e),H(a.$$.fragment,e),H(d.$$.fragment,e),H(m.$$.fragment,e),f=!0)},o(e){j(s.$$.fragment,e),j(a.$$.fragment,e),j(d.$$.fragment,e),j(m.$$.fragment,e),f=!1},d(e){e&&h(n),e&&h(o),P(s,e),e&&h(i),P(a,e),e&&h(r),P(d,e),e&&h(l),P(m,e)}}}class be extends q{constructor(e){super(),A(this,e,null,we,i,{})}}function ye(t){let n,o,s,i,a,r,d;return{c(){n=u("h1"),n.textContent="Libraries used",o=p(),s=u("ul"),s.innerHTML='<li><p><a href="https://mdsvex.pngwn.io/" rel="nofollow">mdsvex</a> - used for turning markdown into HTML for the report website. adds a preprocessor to svelte. on the build, it will turn all the markdown files denoted by <code>.md</code> file type into svelte components to be imported for easy edits to the report website.</p></li> \n<li><p><a href="https://kit.svelte.dev/" rel="nofollow">SvelteKit</a> - The framework used to make all websites except report.</p></li> \n<li><p><a href="https://expressjs.com/" rel="nofollow">ExpressJs</a> - used on the embedded system to take requests.</p></li> \n<li><p><a href="https://nodejs.org/en/" rel="nofollow">NodeJs</a> - very popular and widely used javascript runtime used throughout this project. Also provides the npm package manager. The person who corrects this should have this installed if they want to test the project. there is a portable version.</p></li> \n<li><p><a href="https://phosphoricons.com/" rel="nofollow">Phosphor Icons</a> - provide free to use icons! used the <a href="https://www.npmjs.com/package/phosphor-svelte" rel="nofollow">svelte package</a> to make it work with svelte.</p></li> \n<li><p><a href="https://www.npmjs.com/package/node-schedule" rel="nofollow">node-cron</a> - used to create light-alarm.</p></li> \n<li><p><a href="https://firebase.google.com/" rel="nofollow">firebase</a> - used for contact form, etc</p></li>',i=p(),a=u("h1"),a.textContent="Tools used",r=p(),d=u("ul"),d.innerHTML='<li><p><a href="https://www.figma.com/" rel="nofollow">Figma</a> - This tool allows for creating mock-up designs for websites and apps. It was used to try different styles and colors without needing CSS. it was also used to make the logo</p></li> \n<li><p><a href="https://grid.layoutit.com/" rel="nofollow">Layoutit!</a> - This tool generates CSS grid patterns from user-defined sections as CSS grid can be confusing.</p></li>'},m(e,t){c(e,n,t),c(e,o,t),c(e,s,t),c(e,i,t),c(e,a,t),c(e,r,t),c(e,d,t)},p:e,i:e,o:e,d(e){e&&h(n),e&&h(o),e&&h(s),e&&h(i),e&&h(a),e&&h(r),e&&h(d)}}}class ve extends q{constructor(e){super(),A(this,e,null,ye,i,{})}}function $e(t){let n,o,s,i,a,r;return s=new F({}),a=new ve({}),{c(){n=u("h1"),n.textContent="References",o=p(),S(s.$$.fragment),i=p(),S(a.$$.fragment)},m(e,t){c(e,n,t),c(e,o,t),E(s,e,t),c(e,i,t),E(a,e,t),r=!0},p:e,i(e){r||(H(s.$$.fragment,e),H(a.$$.fragment,e),r=!0)},o(e){j(s.$$.fragment,e),j(a.$$.fragment,e),r=!1},d(e){e&&h(n),e&&h(o),P(s,e),e&&h(i),P(a,e)}}}class xe extends q{constructor(e){super(),A(this,e,null,$e,i,{})}}function ke(e){let t,n;return t=new D({}),{c(){S(t.$$.fragment)},m(e,o){E(t,e,o),n=!0},i(e){n||(H(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){P(t,e)}}}function Ce(e){let t,n;return t=new xe({}),{c(){S(t.$$.fragment)},m(e,o){E(t,e,o),n=!0},i(e){n||(H(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){P(t,e)}}}function Te(e){let t,n;return t=new be({}),{c(){S(t.$$.fragment)},m(e,o){E(t,e,o),n=!0},i(e){n||(H(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){P(t,e)}}}function Ie(e){let t,n;return t=new Y({}),{c(){S(t.$$.fragment)},m(e,o){E(t,e,o),n=!0},i(e){n||(H(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){P(t,e)}}}function Me(e){let t,n;return t=new G({}),{c(){S(t.$$.fragment)},m(e,o){E(t,e,o),n=!0},i(e){n||(H(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){P(t,e)}}}function Le(e){let t,n;return t=new ae({}),{c(){S(t.$$.fragment)},m(e,o){E(t,e,o),n=!0},i(e){n||(H(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){P(t,e)}}}function He(e){let t,n;return t=new ce({}),{c(){S(t.$$.fragment)},m(e,o){E(t,e,o),n=!0},i(e){n||(H(t.$$.fragment,e),n=!0)},o(e){j(t.$$.fragment,e),n=!1},d(e){P(t,e)}}}function je(e){let t,n,s,i,a,r,d;const f=[He,Le,Me,Ie,Te,Ce,ke],g=[];function w(e,t){return""===e[0]?0:"#implementation&testing"===e[0]?1:"#design"===e[0]?2:"#evaluation"===e[0]?3:"#investigation&planning"===e[0]?4:"#references"===e[0]?5:6}return s=w(e),i=g[s]=f[s](e),{c(){t=u("main"),n=u("div"),i.c(),a=p(),r=u("div"),r.innerHTML='<div class="menu__text svelte-r9rjfj"><h1 class="svelte-r9rjfj">Menu</h1> \n\t\t\t<a href="" class="svelte-r9rjfj">Introduction</a> \n\t\t\t<a href="#design" class="svelte-r9rjfj">Design</a> \n\t\t\t<a href="#investigation&amp;planning" class="svelte-r9rjfj">Investigation &amp; Planning</a> \n\t\t\t<a href="#implementation&amp;testing" class="svelte-r9rjfj">Implmentation &amp; Testing</a> \n\t\t\t<a href="#evaluation" class="svelte-r9rjfj">Evauluation</a> \n\t\t\t<a href="#references" class="svelte-r9rjfj">References</a></div>',m(n,"class","container svelte-r9rjfj"),m(r,"class","menu svelte-r9rjfj"),m(t,"class","svelte-r9rjfj")},m(e,o){c(e,t,o),l(t,n),g[s].m(n,null),l(t,a),l(t,r),d=!0},p(e,[t]){let a=s;s=w(e),s!==a&&(L={r:0,c:[],p:L},j(g[a],1,1,(()=>{g[a]=null})),L.r||o(L.c),L=L.p,i=g[s],i||(i=g[s]=f[s](e),i.c()),H(i,1),i.m(n,null))},i(e){d||(H(i),d=!0)},o(e){j(i),d=!1},d(e){e&&h(t),g[s].d()}}}function Se(e,t,n){let o=document.location.hash;return window.onpopstate=function(e){n(0,o=document.location.hash)},[o]}return new class extends q{constructor(e){super(),A(this,e,Se,je,i,{})}}({target:document.body,props:{}})}();
//# sourceMappingURL=bundle.js.map
